const DEBUG = false;
// Definitions file starts with this string
const HEADER = `/** @noSelfInFile */
/// <reference types="@typescript-to-lua/language-extensions" />`;
const HEADER_EXT = `\n/// <reference types="@ts-defold/types" />\n`;
const HEADER_GLOBAL = `\n/// <reference types="lua-types/5.1" />\n/// <reference types="lua-types/special/jit-only" />\n`;
// Invalid names in TypeScript
const INVALID_NAMES = [
    'any',
    'boolean',
    'break',
    'case',
    'catch',
    'class',
    'const',
    'continue',
    'debugger',
    'default',
    'delete',
    'do',
    'else',
    'enum',
    'export',
    'extends',
    'false',
    'finally',
    'for',
    'function',
    'if',
    'implements',
    'import',
    'in',
    'instanceof',
    'interface',
    'let',
    'new',
    'null',
    'package',
    'private',
    'protected',
    'public',
    'return',
    'static',
    'super',
    'switch',
    'throw',
    'true',
    'try',
    'typeof',
    'undefined',
    'var',
    'void',
    'while',
    'with',
    'yield',
];
// All valid types are listed here
const KNOWN_TYPES = {
    ANY: 'any',
    '...': 'any[]',
    TBL: 'object',
    TABLE: 'object',
    TABEL: 'object', // intentional typo
    OBJECT: 'object',
    MESSAGE: 'undefined',
    NUM: 'number',
    NUMBER: 'number',
    NUMMBER: 'number', // intentional typo
    INT: 'number',
    INTEGER: 'number',
    FLOAT: 'number',
    FLOATING: 'number',
    DOUBLE: 'number',
    STR: 'string',
    STRING: 'string',
    BOOL: 'boolean',
    BOOLEAN: 'boolean',
    FN: '(...args: any[]) => unknown',
    FUNC: '(...args: any[]) => unknown',
    FUNCTION: '(...args: any[]) => unknown',
    HASH: 'hash',
    URL: 'url',
    NODE: 'node',
    NIL: 'undefined',
    NILL: 'undefined', // intentional typo
    BUFFER: 'buffer',
    BUFFERSTREAM: 'bufferstream',
    VECTOR: 'ReturnType<typeof vmath.vector>',
    VECTOR3: 'vmath.vector3',
    VECTOR4: 'vmath.vector4',
    VECTO4: 'vmath.vector4', // intentional typo
    MATRIX: 'vmath.matrix4',
    MATRIX4: 'vmath.matrix4',
    QUAT: 'vmath.quaternion',
    QUATERNION: 'vmath.quaternion',
    QUATERTION: 'vmath.quaternion', // intentional typo
    'VMATH.VECTOR': 'vmath.vector',
    'VMATH.VECTOR3': 'vmath.vector3',
    'VMATH.VECTOR4': 'vmath.vector4',
    'VMATH.MATRIX4': 'vmath.matrix4',
    'VMATH.QUATERNION': 'vmath.quaternion',
    USERDATA: 'LuaUserdata',
    LUAUSERDATA: 'LuaUserdata',
    CONSTANT: 'number', // TO-DO: Handle `constant` (gameobject, gui_script, profiler, render_script, sys, buffer, collection_factory, factory, model, window)
    HANDLE: 'number', // TO-DO: Handle `handle` (render_script, camera)
    TEXTURE: 'number',
    CONSTANT_BUFFER: 'LuaUserdata', // TO-DO (render_script)
    // TO-DO: Handle `predicate` (render_script)
    // TO-DO: Handle `b2World`
    // TO-DO: Handle `b2BodyType`
    B2BODY: 'typeof b2d.body',
    // Socket library
    CLIENT: 'typeof socket.client',
    CONNECTED: 'typeof socket.connected',
    MASTER: 'typeof socket.master',
    SERVER: 'typeof socket.server',
    UNCONNECTED: 'typeof socket.unconnected',
    RENDER_TARGET: 'number',
    'GO.PLAYBACK_ONCE_FORWARD': 'typeof go.PLAYBACK_ONCE_FORWARD',
    'GO.PLAYBACK_ONCE_BACKWARD': 'typeof go.PLAYBACK_ONCE_BACKWARD',
    'GO.PLAYBACK_ONCE_PINGPONG': 'typeof go.PLAYBACK_ONCE_PINGPONG',
    'GO.PLAYBACK_LOOP_FORWARD': 'typeof go.PLAYBACK_LOOP_FORWARD',
    'GO.PLAYBACK_LOOP_BACKWARD': 'typeof go.PLAYBACK_LOOP_BACKWARD',
    'GO.PLAYBACK_LOOP_PINGPONG': 'typeof go.PLAYBACK_LOOP_PINGPONG',
    'GO.EASING_INBACK': 'typeof go.EASING_INBACK',
    'GO.EASING_INBOUNCE': 'typeof go.EASING_INBOUNCE',
    'GO.EASING_INCIRC': 'typeof go.EASING_INCIRC',
    'GO.EASING_INCUBIC': 'typeof go.EASING_INCUBIC',
    'GO.EASING_INELASTIC': 'typeof go.EASING_INELASTIC',
    'GO.EASING_INEXPO': 'typeof go.EASING_INEXPO',
    'GO.EASING_INOUTBACK': 'typeof go.EASING_INOUTBACK',
    'GO.EASING_INOUTBOUNCE': 'typeof go.EASING_INOUTBOUNCE',
    'GO.EASING_INOUTCIRC': 'typeof go.EASING_INOUTCIRC',
    'GO.EASING_INOUTCUBIC': 'typeof go.EASING_INOUTCUBIC',
    'GO.EASING_INOUTELASTIC': 'typeof go.EASING_INOUTELASTIC',
    'GO.EASING_INOUTEXPO': 'typeof go.EASING_INOUTEXPO',
    'GO.EASING_INOUTQUAD': 'typeof go.EASING_INOUTQUAD',
    'GO.EASING_INOUTQUART': 'typeof go.EASING_INOUTQUART',
    'GO.EASING_INOUTQUINT': 'typeof go.EASING_INOUTQUINT',
    'GO.EASING_INOUTSINE': 'typeof go.EASING_INOUTSINE',
    'GO.EASING_INQUAD': 'typeof go.EASING_INQUAD',
    'GO.EASING_INQUART': 'typeof go.EASING_INQUART',
    'GO.EASING_INQUINT': 'typeof go.EASING_INQUINT',
    'GO.EASING_INSINE': 'typeof go.EASING_INSINE',
    'GO.EASING_LINEAR': 'typeof go.EASING_LINEAR',
    'GO.EASING_OUTBACK': 'typeof go.EASING_OUTBACK',
    'GO.EASING_OUTBOUNCE': 'typeof go.EASING_OUTBOUNCE',
    'GO.EASING_OUTCIRC': 'typeof go.EASING_OUTCIRC',
    'GO.EASING_OUTCUBIC': 'typeof go.EASING_OUTCUBIC',
    'GO.EASING_OUTELASTIC': 'typeof go.EASING_OUTELASTIC',
    'GO.EASING_OUTEXPO': 'typeof go.EASING_OUTEXPO',
    'GO.EASING_OUTINBACK': 'typeof go.EASING_OUTINBACK',
    'GO.EASING_OUTINBOUNCE': 'typeof go.EASING_OUTINBOUNCE',
    'GO.EASING_OUTINCIRC': 'typeof go.EASING_OUTINCIRC',
    'GO.EASING_OUTINCUBIC': 'typeof go.EASING_OUTINCUBIC',
    'GO.EASING_OUTINELASTIC': 'typeof go.EASING_OUTINELASTIC',
    'GO.EASING_OUTINEXPO': 'typeof go.EASING_OUTINEXPO',
    'GO.EASING_OUTINQUAD': 'typeof go.EASING_OUTINQUAD',
    'GO.EASING_OUTINQUART': 'typeof go.EASING_OUTINQUART',
    'GO.EASING_OUTINQUINT': 'typeof go.EASING_OUTINQUINT',
    'GO.EASING_OUTINSINE': 'typeof go.EASING_OUTINSINE',
    'GO.EASING_OUTQUAD': 'typeof go.EASING_OUTQUAD',
    'GO.EASING_OUTQUART': 'typeof go.EASING_OUTQUART',
    'GO.EASING_OUTQUINT': 'typeof go.EASING_OUTQUINT',
    'GO.EASING_OUTSINE': 'typeof go.EASING_OUTSINE',
    'GRAPHICS.BUFFER_TYPE_COLOR0_BIT': 'typeof graphics.BUFFER_TYPE_COLOR0_BIT',
    'GRAPHICS.BUFFER_TYPE_COLOR1_BIT': 'typeof graphics.BUFFER_TYPE_COLOR1_BIT',
    'GRAPHICS.BUFFER_TYPE_COLOR2_BIT': 'typeof graphics.BUFFER_TYPE_COLOR2_BIT',
    'GRAPHICS.BUFFER_TYPE_COLOR3_BIT': 'typeof graphics.BUFFER_TYPE_COLOR3_BIT',
    'GRAPHICS.BUFFER_TYPE_DEPTH_BIT': 'typeof graphics.BUFFER_TYPE_DEPTH_BIT',
    'GRAPHICS.BUFFER_TYPE_STENCIL_BIT': 'typeof graphics.BUFFER_TYPE_STENCIL_BIT',
};
const TYPES_TO_SKIP = ['MESSAGE', 'PROPERTY'];
// We'll make default return types slightly stricter than default param types
const DEFAULT_PARAM_TYPE = 'any';
const DEFAULT_RETURN_TYPE = 'unknown';
// Theoretically, it's impossible not to have a name, but just in case
const DEFAULT_NAME_IF_BLANK = 'missingName';
export { DEBUG, HEADER, HEADER_EXT, HEADER_GLOBAL, INVALID_NAMES, KNOWN_TYPES, TYPES_TO_SKIP, DEFAULT_PARAM_TYPE, DEFAULT_RETURN_TYPE, DEFAULT_NAME_IF_BLANK, };
